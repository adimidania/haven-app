// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  SUPER_USER
}

model User {
  id String @id @default(uuid())

  name        String
  dateOfBirth DateTime
  country     String

  email    String @unique
  password String

  role Role @default(USER)

  isActive Boolean @default(true)
  Chat     Chat[]
}

model Chat {
  id   String @id @default(uuid())
  user User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  name String

  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  userId      String
  ChatMessage ChatMessage[]
}

model ChatMessage {
  id   String @id @default(uuid())
  chat Chat   @relation(fields: [chatId], references: [id], onDelete: Cascade)

  message String
  isSent  Boolean // false -> response from AI model. true -> is sent by the user
  chatId  String

  createdAt DateTime @default(now())
}
